#[derive(Debug)]
pub enum MeshType {
    Default,
    MainHull,
    Wing,
    Fuselage,
    GunTurret,
    SmallGun,
    Engine,
    Bridge,
    ShieldGen,
    EnergyGen,
    Launcher,
    CommSys,
    BeamSys,
    CommandVBeam,
    DockingPlat,
    LandingPlat,
    Hangar,
    CargoPod,
    MiscHull,
    Antenna,
    RotWing,
    RotGunTurret,
    RotLauncher,
    RotCommSys,
    RotBeamSys,
    RotCommandBeam,
    Custom1,
    Custom2,
    Custom3,
    Custom4,
    Custom5,
    Custom6,

    Unknown(u16),
}

impl From<u16> for MeshType {
    fn from(value: u16) -> Self {
        match value {
            0 => MeshType::Default,
            1 => MeshType::MainHull,
            2 => MeshType::Wing,
            3 => MeshType::Fuselage,
            4 => MeshType::GunTurret,
            5 => MeshType::SmallGun,
            6 => MeshType::Engine,
            7 => MeshType::Bridge,
            8 => MeshType::ShieldGen,
            9 => MeshType::EnergyGen,
            10 => MeshType::Launcher,
            11 => MeshType::CommSys,
            12 => MeshType::BeamSys,
            13 => MeshType::CommandVBeam,
            14 => MeshType::DockingPlat,
            15 => MeshType::LandingPlat,
            16 => MeshType::Hangar,
            17 => MeshType::CargoPod,
            18 => MeshType::MiscHull,
            19 => MeshType::Antenna,
            20 => MeshType::RotWing,
            21 => MeshType::RotGunTurret,
            22 => MeshType::RotLauncher,
            23 => MeshType::RotCommSys,
            24 => MeshType::RotBeamSys,
            25 => MeshType::RotCommandBeam,
            26 => MeshType::Custom1,
            27 => MeshType::Custom2,
            28 => MeshType::Custom3,
            29 => MeshType::Custom4,
            30 => MeshType::Custom5,
            31 => MeshType::Custom6,
            _ => MeshType::Unknown(value),
        }
    }
}
